
  CREATE OR REPLACE FORCE VIEW "OTRS"."CSSJ_CHAMADOS_OTRS" ("DT_ABERTURA", "HORA_ABERTURA", "CHAMADO", "FILA", "SERVIÇO", "TIPO", "DT_FECHAMENTO", "HORA_FECHAMENTO", "TEMPO_ABERTO", "TEMPO_EM_ATENDIMENTO", "CENTRO_DE_CUSTO", "CLIENTE", "USUARIO_ABERTURA", "USUARIO_FECHAMENTO") AS 
  SELECT

-- --------------------------------------------------------------------------
-- PROPOSITO:
-- Criar View para exibir informações detalhadas sobre os chamados do OTRS.
--
--
-- HISTÓRICO DE MODIFICAÇÃO:
-- #ID  DATA        AUTOR    DESCRIÇÃO
-- ---  ----------  -------  ------------------------------------------------
-- #00  ??/??/????  ROBERTO  Criação da Query - Chamado nº 201701041017063 
-- #01  18/01/2017  ROBERTO  Criação e disponibilização da View.
-- --------------------------------------------------------------------------  
  
TRUNC(T.CREATE_TIME) DT_ABERTURA, TO_CHAR(T.CREATE_TIME, 'HH24:MI') HORA_ABERTURA, T.TN CHAMADO, Q.NAME FILA, S.NAME SERVIÇO, TT.NAME TIPO, 
CASE WHEN T.TICKET_STATE_ID IN (15,9) THEN TRUNC(T.CHANGE_TIME) END DT_FECHAMENTO,
CASE WHEN T.TICKET_STATE_ID IN (15,9) THEN TO_CHAR(T.CHANGE_TIME,'HH24:MI') END HORA_FECHAMENTO,
--(T.CHANGE_TIME - T.CREATE_TIME) DAY(9) TO SECOND TEMPO_ABERTO,
SUBSTR(((T.CHANGE_TIME - T.CREATE_TIME) DAY(9) TO SECOND),8,3) || ' Dias ' || SUBSTR(((T.CHANGE_TIME - T.CREATE_TIME) DAY(9) TO SECOND),12,5) || 'h' TEMPO_ABERTO,
FN_CSSJ_TEMPO_REAL_ATENDIMENTO(T.TN) TEMPO_EM_ATENDIMENTO,
--CASE WHEN T.TICKET_STATE_ID IN (15,9) THEN TRUNC(T.CHANGE_TIME - T.CREATE_TIME) END DIAS,
T.CUSTOMER_ID CENTRO_DE_CUSTO, T.CUSTOMER_USER_ID CLIENTE,
(SELECT U2.FIRST_NAME FROM USERS U2 WHERE T.CREATE_BY = U2.ID) USUARIO_ABERTURA, U.FIRST_NAME USUARIO_FECHAMENTO
FROM TICKET T
JOIN TICKET_STATE TS ON T.TICKET_STATE_ID  = TS.ID
JOIN QUEUE Q         ON T.QUEUE_ID         = Q.ID
JOIN TICKET_TYPE TT  ON T.TYPE_ID          = TT.ID
JOIN SERVICE S       ON T.SERVICE_ID       = S.ID
JOIN USERS U         ON T.USER_ID          = U.ID
JOIN QUEUE Q         ON T.QUEUE_ID         = Q.ID
JOIN TICKET_TYPE TT  ON T.TYPE_ID          = TT.ID
--JOIN ARTICLE A       ON T.ID               = A.TICKET_ID --Inclui os artigos do chamado.
--JOIN CUSTOMER C      ON T.CUSTOMER_USER_ID = C.ID
--WHERE
--T.TN = 201701051017172
--TS.ID                                != 15 
--ORDER BY Q.NAME
;
